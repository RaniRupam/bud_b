package com.budgetbotique.usermanagement.controller;



import com.budgetbotique.usermanagement.model.UserInfo;
import com.budgetbotique.usermanagement.security.AuthRequest;
import com.budgetbotique.usermanagement.service.JwtService;
import com.budgetbotique.usermanagement.service.UserInfoService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/auth") 
@CrossOrigin(origins = "http://localhost:3000")
public class UserController { 
  
    @Autowired
    private UserInfoService service; 
  
    @Autowired
    private JwtService jwtService; 
  
    @Autowired
    private AuthenticationManager authenticationManager; 
  
    @GetMapping("/welcome") 
    public String welcome() { 
        return "Welcome this endpoint is not secure"; 
    } 
  
    @PostMapping("/addNewUser") 
    public String addNewUser(@RequestBody UserInfo userInfo) { 
        return service.addUser(userInfo); 
    } 
  
    @GetMapping("/user/userProfile") 
    @PreAuthorize("hasAuthority('ROLE_USER')") 
    public String userProfile() { 
        return "Welcome to User Profile"; 
    } 
  
    @GetMapping("/admin/adminProfile") 
    @PreAuthorize("hasAuthority('ROLE_ADMIN')") 
    public String adminProfile() { 
        return "Welcome to Admin Profile"; 
    } 
  
    @PostMapping("/generateToken") 
    public String authenticateAndGetToken(@RequestBody AuthRequest authRequest) { 
        try {
        	System.out.println("Received authentication request for user: " + authRequest.getEmail() 
            + " with password: " + authRequest.getPassword());
        	Authentication authentication = authenticationManager.authenticate(
                new UsernamePasswordAuthenticationToken(authRequest.getEmail(), authRequest.getPassword()));

            if (authentication.isAuthenticated()) {
                String username = authRequest.getEmail();
                String token = jwtService.generateToken(username);
                System.out.println("Token generated successfully for user: " + username +" "+ token);
                return token;
            } else {
                throw new UsernameNotFoundException("Authentication failed for user: " + authRequest.getEmail());
            }
        } catch (Exception e) {
         
        	System.out.println("Error during authentication: " + e.getMessage());
            throw e;
        }
    }

  
} 