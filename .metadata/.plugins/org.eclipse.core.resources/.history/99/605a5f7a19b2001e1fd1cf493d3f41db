package com.budgetbotique.usermanagement.service;

import com.budgetbotique.usermanagement.enums.UserRole;
import com.budgetbotique.usermanagement.model.User;
import com.budgetbotique.usermanagement.repository.UserRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import java.util.Optional;
import java.util.Set;

@Service
public class UserService implements UserDetailsService {

    private final UserRepository userRepository;

    public UserService(UserRepository userRepository) {
        this.userRepository = userRepository;
    }
    
    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        return (UserDetails) userRepository.findByUsername(username)
                .orElseThrow(() -> new UsernameNotFoundException("User not found with username: " + username));
    }



    public Optional<User> findUserByUsernameWithRoles(String username) {
        return userRepository.findByUsernameWithRoles(username);
    }

    public void updateUserRoles(String username, Set<UserRole> newRoles) {
        userRepository.findByUsernameWithRoles(username).ifPresent(user -> {
            user.setRoles(newRoles);
            userRepository.save(user);
        });
    }
}